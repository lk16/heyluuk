version: '3'


services:
  app:
    build:
      context: .
      dockerfile: ./build/app.Dockerfile
    restart: unless-stopped
    networks:
      - app-network
      - postgres
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - CAPTCHA_SITE_KEY
      - CAPTCHA_SECRET_KEY

  db:
    image: postgres
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD
    ports:
    - 5432:5432
    networks:
      - postgres

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
    - app-network

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  postgres:
    driver: bridge
  app-network:
    driver: bridge